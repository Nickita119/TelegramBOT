from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
import asyncio

BOT_TOKEN = '8165959081:AAGV4GKMBh0aaZ1uUeXsZ42t7hAUZpYYUSA'

bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –ü—Ä–æ—Å—Ç—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º—ã
class UserForm(StatesGroup):
    waiting_name = State()
    waiting_age = State()

# –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_main_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É", callback_data="form")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
    ])
    return keyboard

# –ö–æ–º–∞–Ω–¥–∞ /start - –í–ê–ñ–ù–û: —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –í–´–®–ï –æ–±—â–∏—Ö!
@dp.message(CommandStart())
async def start_handler(message: Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç –§–ª–∞–≤–∏! üëã\n\n"
        "–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=get_main_keyboard()
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
@dp.message(Command("help"))
async def help_handler(message: Message):
    help_text = """
üîß –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
/about - –û–±–æ –º–Ω–µ

üìù –Ø —É–º–µ—é:
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –†–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç–∏–∫–µ—Ä—ã –∏ —Ñ–æ—Ç–æ
‚Ä¢ –ó–∞–ø–æ–ª–Ω—è—Ç—å –ø—Ä–æ—Å—Ç—É—é —Ñ–æ—Ä–º—É
    """
    await message.answer(help_text)

# –ö–æ–º–∞–Ω–¥–∞ /about
@dp.message(Command("about"))
async def about_handler(message: Message):
    await message.answer("–Ø –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –§–ª–∞–≤–∏! ü§ñ\n–°–æ–∑–¥–∞–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è aiogram.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
@dp.callback_query(F.data == "help")
async def help_callback(callback):
    await callback.message.answer(
        "üîß –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\n"
        "/about - –û–±–æ –º–Ω–µ"
    )
    await callback.answer()

# –ù–∞—á–∞–ª–æ —Ñ–æ—Ä–º—ã
@dp.callback_query(F.data == "form")
async def start_form(callback, state: FSMContext):
    await state.set_state(UserForm.waiting_name)
    await callback.message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? üòä")
    await callback.answer()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏
@dp.message(UserForm.waiting_name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(UserForm.waiting_age)
    await message.answer(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {message.text}! üëã\n–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
@dp.message(UserForm.waiting_age)
async def get_age(message: Message, state: FSMContext):
    try:
        age = int(message.text)
        data = await state.get_data()
        await state.clear()
        
        await message.answer(
            f"–û—Ç–ª–∏—á–Ω–æ! üéâ\n\n"
            f"–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:\n"
            f"–ò–º—è: {data['name']}\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç\n\n"
            f"–§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!",
            reply_markup=get_main_keyboard()
        )
    except:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ üòÖ")

# –°—Ç–∏–∫–µ—Ä—ã - –í–ê–ñ–ù–û: —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –í–´–®–ï –æ–±—â–∏—Ö
@dp.message(F.sticker)
async def sticker_handler(message: Message):
    await message.answer("–û–≥–æ! –≠—Ç–æ —Å—Ç–∏–∫–µ—Ä! –ö–õ–ê–°–°! üòç")

# –§–æ—Ç–æ
@dp.message(F.photo)
async def photo_handler(message: Message):
    await message.answer("–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ! üì∏‚ú®")

# –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ - –í–ê–ñ–ù–û: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ü–û–°–õ–ï–î–ù–ò–ú!
@dp.message()
async def echo_handler(message: Message):
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
    await message.reply(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# –ö–æ—Ä—É—Ç–∏–Ω–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, –æ–∂–∏–¥–∞–µ–º –∞–ø–¥–µ–π—Ç—ã...")
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())